# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

jobs:
  build:
    machine: true

    steps:
      - checkout
      - run: printenv
      - run: git submodule init
      - run: git submodule update
      - run: git submodule foreach git pull origin master
      - run: cat ./laradock/env-example ./etc/laradock.env-example > ./laradock/.env
      - run: cp etc/laravel.env.example src/.env
    #   - run: cp etc/createdb.sql laradock/mysql/docker-entrypoint-initdb.d
      - run: ls laradock

      # ----------------------------------------
      # Docker
      # ----------------------------------------
      - run:
          name: Archive Build Context (for checksum)
          command: tar --mtime="2000-01-01 00:00Z" -cvf laradock.tar laradock
      - restore_cache:
          keys:
            - laradock-v1-{{ checksum "./laradock.tar" }}
          paths:
            - ~/caches/images.tar
      - run:
          name: Docker Image Rebuild
          command: |
            if [ ! -f ~/caches/images.tar ]; then
              bash dockup.sh
            fi
      - run:
          name: Save Docker Images
          command: |
            if [ ! -f ~/caches/images.tar ]; then            
              mkdir ~/caches
              docker image save \
                  $(docker image ls --format="{{.Repository}}" | grep $(grep COMPOSE_PROJECT_NAME etc/laradock.env-example | sed s/.*=//g)_) \
              -o ~/caches/images.tar
            fi
      - save_cache:
          key: laradock-v1-{{ checksum "./laradock.tar" }}
          paths:
            - ~/caches/images.tar
      - run:
          name: Load Docker Images
          command: docker image load -i ~/caches/images.tar
      - run: docker image ls
      - run: bash dockup.sh

      # ----------------------------------------
      # JavaScript
      # ----------------------------------------
      - run: cp ./src/package-lock.json ./src/package-lock.json.bak
      - restore_cache:
          keys:
            - npm-v1-{{ checksum "./src/package-lock.json.bak" }}
          paths:
            - ./src/node_modules            
      - run:
          name: Install JavaScript Packages
          command: |
            if [ ! -d ./src/node_modules ]; then
              pushd ./laradock
              docker-compose exec workspace npm install
            fi
      - save_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json.bak" }}
          paths:
            - ./src/node_modules
      - run:
          name: JavaScript CI
          command: docker-compose exec workspace npm run ci
          working_directory: ./laradock

      # ----------------------------------------
      # PHP
      # ----------------------------------------
      - run: cp ./src/composer.lock ./src/composer.lock.bak
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "./src/composer.lock.bak" }}
          paths:
            - ./src/vendor
      - run:
          name: Install PHP Packages
          command: |
            if [ ! -d ./src/vendor ]; then
              pushd ./laradock
              docker-compose exec workspace composer install
            fi
      - save_cache:
          key: composer-v1-{{ checksum "./src/composer.lock.bak" }}
          paths:
            - ./src/vendor
      - run:
          name: Initialize Laravel Project
          command: docker-compose exec workspace composer run initialize
          working_directory: ./laradock
      - run:
          name: PHP CI (waiting for the invocation of mysqld)
          command: docker-compose exec workspace  /root/etc/wait-for-it.sh mysql:3306 -- composer run ci
          working_directory: ./laradock


      # ----------------------------------------
      # Artifacts
      # ----------------------------------------      
      - store_artifacts:
          path: ./src/coverage/php
          destination: coverage/php
      - store_artifacts:
          path: ./src/coverage/js
          destination: coverage/js
          

